>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[-40, -2, -30],[24, 5, -6]]
>>> print(matrix_divided(matrix, 2))
[[-20.0, -1.0, -15.0], [12.0, 2.5, -3.0]]

>>> matrix = [[-40, -2, -30, 10],[24, 5, -6]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

>>> matrix = [['l', -2, -30, 10],[24, 5, -6]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[],[]]
>>> print(matrix_divided(matrix, 2))
[[], []]

>>> matrix = [[2, 3],[0, 2]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

>>> matrix = [[2, 3],[0, 2]]
>>> print(matrix_divided(matrix, 'hey'))
Traceback (most recent call last):
	...
TypeError: div must be a number

>>> matrix = [[2.00000*3.5, 3**-1.00],[0, 2]]
>>> print(matrix_divided(matrix, 2))
[[3.5, 0.17], [0.0, 1.0]]

>>> matrix = ([2.00000*3.5, 3**-1.00],[0, 2])
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = ()
>>> print(matrix_divided())
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
